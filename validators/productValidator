const { body, validationResult } = require('express-validator');

// Validation rules for product creation/update
const validateProduct = [
  // Name must be a non-empty string
  body('name')
    .trim()
    .notEmpty()
    .withMessage('Product name is required')
    .isLength({ max: 100 })
    .withMessage('Name must be less than 100 characters'),

  // Price must be a positive number
  body('price')
    .isFloat({ gt: 0 })
    .withMessage('Price must be a positive number'),

  // Description (optional, but if provided, must be a string)
  body('description')
    .optional()
    .isString()
    .withMessage('Description must be a string'),

  // inStock must be an integer >= 0
  body('inStock')
    .optional()
    .isInt({ min: 0 })
    .withMessage('Stock must be a non-negative integer'),

  // Handle validation errors
  (req, res, next) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      return res.status(400).json({ errors: errors.array() });
    }
    next(); // Proceed if validation passes
  },
];

module.exports = { validateProduct };